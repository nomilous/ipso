// Generated by CoffeeScript 1.6.3
var fs, lstatOverride, lstatSync, override, readFileSync, sep, statSync;

sep = require('path').sep;

override = {};

lstatOverride = {};

fs = require('fs');

readFileSync = fs.readFileSync;

fs.readFileSync = function(path, encoding) {
  var file, mod, modulePath, modulesPath, parts, scriptPath, _ref;
  _ref = path.split(sep).slice(-2), mod = _ref[0], file = _ref[1];
  parts = path.split(sep).slice(0, -2);
  modulesPath = parts.join(sep);
  modulePath = parts.concat([mod]).join(sep);
  scriptPath = parts.concat([mod, 'STUBBED.js']).join(sep);
  if (override.hasOwnProperty(mod)) {
    switch (file) {
      case 'package.json':
        lstatOverride[modulesPath] = 1;
        lstatOverride[modulePath] = 1;
        lstatOverride[scriptPath] = 1;
        return JSON.stringify(override[mod]['package.json']);
      case 'STUBBED.js':
        if (typeof override[mod]['STUBBED.js'] === 'function') {
          return "// console.log('loading stubbed module \"" + mod + "\"');\n\nipso = require('ipso');\n\n/* stubbed module scope contains get() for access to pre-defined mock objects */\n\nget = function(tag) {\n    try { \n        return ipso.does.getSync(tag).object\n    } catch (error) {\n        console.log('ipso: missing mock \"%s\"', tag);\n    }\n}; \n\nmodule.exports = " + (override[mod]['STUBBED.js'].toString());
        } else {
          console.log("ipso.define(list) requires list of functions to be exported as modules,\ndoes not (yet?) support define() for modules that export objects".red);
        }
    }
  }
  return readFileSync(path, encoding);
};

statSync = fs.statSync;

fs.statSync = function(path) {
  if (path.match(/STUBBED.js/)) {
    return {
      isDirectory: function() {
        return false;
      }
    };
  }
  return statSync(path);
};

lstatSync = fs.lstatSync;

fs.lstatSync = function(path) {
  if (lstatOverride[path] != null) {
    return {
      isSymbolicLink: function() {
        return false;
      }
    };
  }
  return lstatSync(path);
};

module.exports = function(list) {
  var moduleName, _results;
  _results = [];
  for (moduleName in list) {
    _results.push(override[moduleName] = {
      'package.json': {
        name: moduleName,
        version: '0.0.0',
        main: 'STUBBED.js',
        dependencies: {}
      },
      'STUBBED.js': list[moduleName]
    });
  }
  return _results;
};
