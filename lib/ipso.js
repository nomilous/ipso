// Generated by CoffeeScript 1.6.3
var facto, util;

util = require('also').util;

facto = require('facto');

module.exports = function(fn) {
  var fnArgs;
  fnArgs = util.argsOf(fn);
  if (fnArgs.length === 0) {
    return function() {
      return fn.call(this);
    };
  }
  return function(done) {
    var inject, nodule, promise, _i, _j, _len, _len1;
    inject = [];
    if (fnArgs[0] === 'done') {
      inject.push(done);
      fnArgs.shift();
    } else {
      if (fnArgs[0] !== 'facto' ? done != null : void 0) {
        done();
      }
    }
    if (fnArgs[0] === 'facto') {
      inject.push(function(meta) {
        return facto(done(), meta);
      });
      fnArgs.shift();
      for (_i = 0, _len = fnArgs.length; _i < _len; _i++) {
        nodule = fnArgs[_i];
        inject.push(require(nodule));
      }
      promise = fn.apply(this, inject);
    } else {
      for (_j = 0, _len1 = fnArgs.length; _j < _len1; _j++) {
        nodule = fnArgs[_j];
        inject.push(require(nodule));
      }
      promise = fn.apply(this, inject);
    }
    if ((promise != null) && (promise.then != null)) {
      return promise.then((function() {}), done);
    }
  };
};
