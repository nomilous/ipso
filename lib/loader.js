// Generated by CoffeeScript 1.6.3
var lastInstance, parallel;

parallel = require('also').parallel;

lastInstance = void 0;

module.exports._test = function() {
  return lastInstance;
};

module.exports.create = function(config) {
  var api, local;
  lastInstance = local = {
    dir: config.dir,
    modules: config.modules,
    upperCase: function(string) {
      var char, error;
      try {
        char = string[0].charCodeAt(0);
      } catch (_error) {
        error = _error;
        return false;
      }
      if (char > 64 && char < 91) {
        return true;
      }
      return false;
    },
    loadModule: function(name) {
      if ((function() {
        try {
          return local.modules[name].require != null;
        } catch (_error) {}
      })()) {
        return require(local.modules[name].require);
      }
      if (!local.upperCase(name)) {
        return require(name);
      }
    },
    loadModules: function(fnArgsArray, spectate) {
      var Module, promise;
      return promise = parallel((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = fnArgsArray.length; _i < _len; _i++) {
          Module = fnArgsArray[_i];
          _results.push((function(Module) {
            return function() {
              return spectate(local.loadModule(Module));
            };
          })(Module));
        }
        return _results;
      })());
    }
  };
  return api = {
    loadModules: local.loadModules
  };
};
