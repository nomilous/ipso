// Generated by CoffeeScript 1.6.3
var lastInstance, parallel;

parallel = require('also').parallel;

lastInstance = void 0;

module.exports._test = function() {
  return lastInstance;
};

module.exports.create = function(config) {
  var api, local;
  if (config == null) {
    config = {};
  }
  lastInstance = local = {
    dir: config.dir,
    loadModules: function(spectate, fnArgsArray) {
      var nodule;
      return parallel((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = fnArgsArray.length; _i < _len; _i++) {
          nodule = fnArgsArray[_i];
          _results.push((function(nodule) {
            return function() {
              return spectate(require(nodule));
            };
          })(nodule));
        }
        return _results;
      })());
    }
  };
  return api = {
    loadModules: local.loadModules
  };
};
