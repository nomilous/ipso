// Generated by CoffeeScript 1.6.3
var EOL, basename, dirname, join, normalize, relative, specLocation, _ref, _ref1;

require('colors');

EOL = require('os').EOL;

_ref = require('path'), normalize = _ref.normalize, dirname = _ref.dirname, basename = _ref.basename, relative = _ref.relative;

_ref1 = require('path'), dirname = _ref1.dirname, basename = _ref1.basename, relative = _ref1.relative, join = _ref1.join;

module.exports.specLocation = specLocation = function() {
  var baseName, fileName, line, lineNrs, m, path, specPath, _i, _len, _ref2, _ref3, _ref4;
  _ref2 = (new Error).stack.split(EOL);
  for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
    line = _ref2[_i];
    baseName = void 0;
    try {
      _ref3 = line.match(/.*\((.*?):(.*)/), m = _ref3[0], path = _ref3[1], lineNrs = _ref3[2];
    } catch (_error) {}
    if (path == null) {
      continue;
    }
    fileName = basename(path);
    try {
      _ref4 = fileName.match(/(.*)_spec.[coffee|js]/), m = _ref4[0], baseName = _ref4[1];
    } catch (_error) {}
    if (!baseName) {
      continue;
    }
    specPath = relative(process.cwd(), dirname(path));
    return {
      fileName: fileName,
      baseName: baseName,
      specPath: specPath
    };
  }
};

module.exports.load = function(templatePath) {
  return require(templatePath);
};

module.exports.save = function(templateName, name, does) {
  return does.get({
    query: {
      tag: name
    }
  }, function(err, entity) {
    var error, loaded, renderedString, templateModule;
    if (err != null) {
      console.log('ipso:', "could not save '" + name + "' - " + err.message);
      return;
    }
    try {
      templateModule = join(process.env.HOME, '.ipso', 'templates', templateName);
      loaded = module.exports.load(templateModule);
    } catch (_error) {
      error = _error;
      console.log(error.message.red);
      return;
    }
    return renderedString = loaded.render({
      entity: entity
    });
  });
};
